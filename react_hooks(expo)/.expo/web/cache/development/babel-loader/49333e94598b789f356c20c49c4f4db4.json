{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _characters$;\n  var _React$useState = React.useState(5),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    number = _React$useState2[0],\n    setNumber = _React$useState2[1];\n  var _React$useState3 = React.useState([]),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    characters = _React$useState4[0],\n    setCharacters = _React$useState4[1];\n  React.useEffect(function () {\n    fetch(\"https://rickandmortyapi.com/api/character\").then(function (data) {\n      return data.json();\n    }).then(function (data) {\n      setCharacters(data.results);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      children: [\"Open up App.tsx to start working on your app! \", number]\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        setNumber(number + 1);\n      }\n    }), _jsx(Text, {\n      children: (_characters$ = characters[0]) == null ? void 0 : _characters$.name\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["React","StatusBar","App","useState","number","setNumber","characters","setCharacters","useEffect","fetch","then","data","json","results","styles","container","name","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["/home/elliott/Documents/Coding/expo-test/App.tsx"],"sourcesContent":["import React from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\n\nexport default function App() {\n  const [number, setNumber] = React.useState(5);\n  const [characters, setCharacters] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(\"https://rickandmortyapi.com/api/character\")\n      .then((data) => data.json())\n      .then((data) => {\n        setCharacters(data.results);\n      });\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.tsx to start working on your app! {number}</Text>\n      <Button\n        onPress={() => {\n          setNumber(number + 1);\n        }}\n      ></Button>\n      <Text>{characters[0]?.name}</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,iBAAiB;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAG5C,eAAe,SAASC,GAAG,GAAG;EAAA;EAC5B,sBAA4BF,KAAK,CAACG,QAAQ,CAAC,CAAC,CAAC;IAAA;IAAtCC,MAAM;IAAEC,SAAS;EACxB,uBAAoCL,KAAK,CAACG,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/CG,UAAU;IAAEC,aAAa;EAEhCP,KAAK,CAACQ,SAAS,CAAC,YAAM;IACpBC,KAAK,CAAC,2CAA2C,CAAC,CAC/CC,IAAI,CAAC,UAACC,IAAI;MAAA,OAAKA,IAAI,CAACC,IAAI,EAAE;IAAA,EAAC,CAC3BF,IAAI,CAAC,UAACC,IAAI,EAAK;MACdJ,aAAa,CAACI,IAAI,CAACE,OAAO,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OACE,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,WAC5B,MAAC,IAAI;MAAA,6DAAgDX,MAAM;IAAA,EAAQ,EACnE,KAAC,MAAM;MACL,OAAO,EAAE,mBAAM;QACbC,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC;MACvB;IAAE,EACM,EACV,KAAC,IAAI;MAAA,0BAAEE,UAAU,CAAC,CAAC,CAAC,qBAAb,aAAeU;IAAI,EAAQ,EAClC,KAAC,SAAS;MAAC,KAAK,EAAC;IAAM,EAAG;EAAA,EACrB;AAEX;AAEA,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}